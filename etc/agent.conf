# Agent configuration files are written in yaml.
#
# Configuration could be overridden by files under
# /etc/bleemeo/agent.conf.d/*.conf
# We suggest to create a file under that folder and leave this
# file unchanged.
#
# Files from the agent.conf.d folder are read in dictonary order (e.g.
# 00-defaults.conf is read before 99-custom.conf)

# You can configure tags for your agent
#tags:
#    - web-server
#    - application-1
#    - ...


# logger configuration. See https://docs.python.org/3/library/logging.config.html#logging-config-dictschema
logging:
    formatters:
        simple:
            format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
    handlers:
        console:
            class: logging.StreamHandler
            formatter: simple
    root:
        level: INFO
        handlers:
            - console

# You can define a threshold on ANY metric. You only need to know it's name and
# add an entry like this one:
#   metric_name:
#       low_critical: 1.0
#       low_warning: 2.0
#       high_warning: 3
#       high_critical: 4.2
# You can omit any of the above 4 threshold (or explicitly set it to null).
#
thresholds:
    cpu_used:
        # When cpu_used grow above 90% it is critical. 80 % is warning.
        high_warning: 80
        high_critical: 90
    disk_used_perc:
        high_warning: 80
        high_critical: 90
    net_err_in:
        high_critical: 0
    net_err_out:
        high_critical: 0
    mem_used_perc:
        high_warning: 80
        high_critical: 90
    io_utilisation:
        high_warning: 80
        high_critical: 90

# Ignore all network interface starting with one of those prefix
network_interface_blacklist:
    - docker
    - lo
    - veth
    - virbr
    - vnet

# Disk to monitor IO statistics
disk_monitor:
    - ^(hd|sd|vd|xvd)[a-z]$
    - ^mmcblk[0-9]$

# Additional metric could be retrived over HTTP(s) by the agent.
#
# It expect response to be only one number in a text/plain response.
#
# Example of metrics:
# metric:
#   pull:
#       the_name_of_your_metric:
#           url: http://localhost:8080/myapp/metric/users_count
#           item: myapp  # item to add to the metric. Default to none
#           ssl_check: true  # should SSL certificate be checked? Default to yes
#           interval: 10  # retrive the metric every N seconds, default to 10
